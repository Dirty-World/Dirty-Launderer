name: Deploy to Google Cloud Functions (Free Tier)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: the-dirty-launderer
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
        project_id: ${{ env.PROJECT_ID }}
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Fetch secrets from GCP Secret Manager
      run: |
        export TELEGRAM_TOKEN=$(gcloud secrets versions access latest --secret="TELEGRAM_TOKEN" --project="${{ env.PROJECT_ID }}")
        export ADMIN_CHAT_ID=$(gcloud secrets versions access latest --secret="ADMIN_CHAT_ID" --project="${{ env.PROJECT_ID }}")
        echo "TELEGRAM_TOKEN=$TELEGRAM_TOKEN" >> $GITHUB_ENV
        echo "ADMIN_CHAT_ID=$ADMIN_CHAT_ID" >> $GITHUB_ENV

    - name: Optimize for Free Tier
      run: |
        cd bot
        python3 optimize_for_free_tier.py
    
    - name: Deploy Main Bot Function
      run: |
        cd bot
        gcloud functions deploy dirty-launderer-bot \
          --runtime python311 \
          --trigger-http \
          --allow-unauthenticated \
          --memory 128MB \
          --timeout 60s \
          --entry-point main \
          --source . \
          --region ${{ env.REGION }} \
          --project ${{ env.PROJECT_ID }} \
          --set-env-vars TELEGRAM_TOKEN="${TELEGRAM_TOKEN}",ADMIN_CHAT_ID="${ADMIN_CHAT_ID}",FIRESTORE_FUNCTION_URL="https://${{ env.REGION }}-${{ env.PROJECT_ID }}.cloudfunctions.net/firestore-function",FUNCTION_URL="https://${{ env.REGION }}-${{ env.PROJECT_ID }}.cloudfunctions.net/dirty-launderer-bot"
    
    - name: Deploy Firestore Function
      run: |
        cd bot
        gcloud functions deploy firestore-function \
          --runtime python311 \
          --trigger-http \
          --memory 128MB \
          --timeout 60s \
          --entry-point main \
          --source . \
          --region ${{ env.REGION }} \
          --project ${{ env.PROJECT_ID }} \
          --set-env-vars TELEGRAM_TOKEN="${TELEGRAM_TOKEN}",ADMIN_CHAT_ID="${ADMIN_CHAT_ID}"
    
    - name: Deploy Webhook Check Function
      run: |
        cd bot
        gcloud functions deploy webhook-check \
          --runtime python311 \
          --trigger-http \
          --memory 128MB \
          --timeout 60s \
          --entry-point main \
          --source . \
          --region ${{ env.REGION }} \
          --project ${{ env.PROJECT_ID }} \
          --set-env-vars TELEGRAM_TOKEN="${TELEGRAM_TOKEN}",EXPECTED_WEBHOOK_URL="https://${{ env.REGION }}-${{ env.PROJECT_ID }}.cloudfunctions.net/dirty-launderer-bot",ALERT_CHAT_ID="${ADMIN_CHAT_ID}"
    
    - name: Set Telegram Webhook
      run: |
        curl -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/setWebhook" \
          -H "Content-Type: application/json" \
          -d '{"url": "https://${{ env.REGION }}-${{ env.PROJECT_ID }}.cloudfunctions.net/dirty-launderer-bot"}'
    
    - name: Log Deployment Success
      run: |
        echo "âœ… Deployment completed successfully!"
        echo "ðŸŽ¯ All functions optimized for Google Cloud Free Tier"
        echo "ðŸ’° Estimated monthly cost: $0.00"
        echo "ðŸ”— Bot URL: https://${{ env.REGION }}-${{ env.PROJECT_ID }}.cloudfunctions.net/dirty-launderer-bot"