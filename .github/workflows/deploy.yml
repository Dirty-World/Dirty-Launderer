name: Deploy Dirty Launderer Bot to GCP

# Trigger deployment on push to main or manual workflow_dispatch
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Zip bot source code
      run: |
        mkdir -p dist
        cd bot && zip -r ../dist/bot-source.zip .

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: "projects/60107979354/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider"
        service_account: "github-deployer@the-dirty-launderer.iam.gserviceaccount.com"

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Upload bot source to GCS
      run: gsutil cp dist/bot-source.zip gs://$GCS_BUCKET_NAME/
      env:
        GCS_BUCKET_NAME: ${{ secrets.GCS_BUCKET_NAME }}

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.7

    - name: Initialize and Import Resources
      working-directory: terraform
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCS_BUCKET_NAME: ${{ secrets.GCS_BUCKET_NAME }}
      run: |
        # Initialize Terraform with GCS backend
        terraform init
        
        # Import existing resources (skipping remove since there's no state yet)
        terraform import google_pubsub_topic.budget_alert_topic projects/the-dirty-launderer/topics/dev-budget-alert-topic || true
        terraform import google_pubsub_topic.budget_alert_topic_main projects/the-dirty-launderer/topics/budget-alert-topic-main || true
        terraform import google_cloudfunctions2_function.github_proxy_sync projects/the-dirty-launderer/locations/us-central1/functions/github-proxy-sync || true
        terraform import google_cloudfunctions_function.dirty_launderer_bot projects/the-dirty-launderer/locations/us-central1/functions/dirty-launderer-bot || true
        terraform import google_iam_workload_identity_pool.github_pool projects/the-dirty-launderer/locations/global/workloadIdentityPools/github-actions-pool || true

    - name: Deploy Terraform
      working-directory: terraform
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCS_BUCKET_NAME: ${{ secrets.GCS_BUCKET_NAME }}
      run: |
        terraform apply -auto-approve \
          -var="project_id=$GCP_PROJECT_ID" \
          -var="bot_source_archive=bot-source.zip" \
          -var="GCS_BUCKET_NAME=$GCS_BUCKET_NAME"

    - name: Notify on Failure
      if: failure()
      run: echo "Deployment failed. Please check the logs."