name: Deploy The Dirty Launderer Bot to GCP

# Trigger deployment on push to main or manual workflow_dispatch
on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

permissions:
  contents: write
  id-token: write
  actions: write
  repository-projects: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        check-latest: true

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi

    - name: Zip bot source code
      run: |
        mkdir -p dist
        if [ ! -d "bot" ]; then
          echo "Error: bot directory not found"
          exit 1
        fi
        cd bot && zip -r ../dist/bot-source.zip .
        if [ ! -f "../dist/bot-source.zip" ]; then
          echo "Error: Failed to create bot-source.zip"
          exit 1
        fi

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: "projects/60107979354/locations/global/workloadIdentityPools/github-actions-pool-prod/providers/github-actions-provider-prod"
        service_account: "github-deployer@the-dirty-launderer.iam.gserviceaccount.com"

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Upload bot source to GCS
      run: gsutil cp dist/bot-source.zip gs://${{ secrets.GCS_BUCKET_NAME }}/

    - name: Get GitHub Token from Secret Manager
      id: get-token
      run: |
        # Ensure we have access to Secret Manager
        if ! gcloud secrets versions access latest --secret=GITHUB_TOKEN &>/dev/null; then
          echo "Error: Could not access GITHUB_TOKEN secret. Check Secret Manager permissions."
          exit 1
        fi
        # Get the token and set it as an environment variable
        echo "GITHUB_PAT=$(gcloud secrets versions access latest --secret=GITHUB_TOKEN)" >> $GITHUB_ENV

    - name: Trigger Infrastructure Deployment
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ env.GITHUB_PAT }}
        repository: Dirty-World/dirty-launderer-infra
        event-type: deploy-infrastructure
        client-payload: |
          {
            "environment": "${{ github.event.inputs.environment || 'dev' }}",
            "source_version": "${{ github.sha }}",
            "bot_source_zip": "bot-source.zip"
          }

    - name: Notify on Failure
      if: failure()
      run: echo "Deployment failed. Please check the logs."